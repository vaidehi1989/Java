<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0028)http://m108/exam/result.aspx -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
		<title>Result:- SunBeam Infotech Pvt LTD, Pune</title>
		<meta content="Microsoft Visual Studio .NET 7.1" name="GENERATOR">
		<meta content="C#" name="CODE_LANGUAGE">
		<meta content="JavaScript" name="vs_defaultClientScript">
		<meta content="http://schemas.microsoft.com/intellisense/ie5" name="vs_targetSchema">
		<script language="JavaScript"> 
			var popup="Copyright 2005, SunBeam Infotech PVT. LTD.";
			function noway(go) 
			{
				if(document.all) 
				{
					if (event.button == 2) 
					{			
						alert(popup);
						return false;
					}
				}
				if (document.layers)
				{
					if (go.which == 3)
					{	
						alert(popup);
						return false;
					}
				} 
			}
			if(document.layers) 
			{ 
				document.captureEvents(Event.MOUSEDOWN);
			}
			document.onmousedown=noway;
			
			var debug = true;
			function right(e)
			{
				if (navigator.appName == 'Netscape' && (e.which == 3 || e.which== 2)) return false;
				else if (navigator.appName == 'Microsoft Internet Explorer' && (event.button == 2 || event.button == 3))
				{
					alert('Copyright 2005, SunBeam Infotech PVT. LTD.');
					return false;
				} 
				return true;
			} 
			document.onmousedown=right; 
			if (document.layers)
			window.captureEvents(Event.MOUSEDOWN);
			window.onmousedown=right;
			
			document.onkeydown = function ()
			{
				alert(popup);
				return false;
			}
			
			function blockMenu()
			{
				return false;
			}
			
		/*onselectstart="return false" onkeypress="return false" onkeydown="return false"
		ondragstart="return false" bottomMargin="0" leftMargin="0" topMargin="0" onload='setInterval("window.clipboardData.clearData()",20);document.attachEvent("oncontextmenu",blockMenu)'
		*/
		/*onselectstart="return false" onkeypress="return false"
		onkeydown="return false" ondragstart="return false" bottomMargin="0" leftMargin="0"
		topMargin="0" onload='setInterval("window.clipboardData.clearData()",20);document.attachEvent("oncontextmenu",blockMenu)'
		*/
		</script>
</head>
	<body rightmargin="0" ms_positioning="GridLayout" onselectstart="return false" onkeypress="return false" onkeydown="return false" ondragstart="return false" bottommargin="0" leftmargin="0" topmargin="0" onload="setInterval(&quot;window.clipboardData.clearData()&quot;,20);document.attachEvent(&quot;oncontextmenu&quot;,blockMenu)">
		<form name="Form1" method="post" action="./CoreJava_6_files/CoreJava_6.htm" id="Form1">
<input type="hidden" name="__VIEWSTATE" value="dDwtMjIwNjg5MjEzO3Q8O2w8aTwxPjs+O2w8dDw7bDxpPDE+O2k8Mz47PjtsPHQ8cDxwPGw8V2lkdGg7XyFTQjs+O2w8MTw1MDBweD47aTwyNTY+Oz4+Oz47Oz47dDxwPHA8bDxUZXh0Oz47bDxIaSBkYWM2OSwgWW91IGhhdmUgc2NvcmVkIDogMDs+Pjs+Ozs+Oz4+Oz4+Oz6PFMHEej3BMuYsNV2OjqinUikXUg==">

			<table id="tblResult" cellspacing="0" cellpadding="0" border="0" height="26" width="500" style="Z-INDEX: 100; LEFT: 138px; POSITION: absolute; TOP: 128px">
	<tbody><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;1190 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q1. The range of values for the short type data is
<br></font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;127 to -128</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;32767 to -32768</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;263 to -264</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;232e+10 to 232 e-10</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 2</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;1237 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q2. Consider the following statements :<br>int x = 10, y = 15;<br>x = (x &lt; y) ? (y + x) : (y - x);<br>What will be the value of x after executing these statements?</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;10</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;25</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;15</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;5</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 2</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;1238 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q3. Which of the following lines will not compile?<br>1. byte b1 = 5, b2 = 3, b3;<br>2. short s = 25;<br>3. b2 = s;<br>4. b3 = b1 * b2;</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;Line 1 and Line 3</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;Line 4 only</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;Line 3 and Line 4</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;Line 1 only</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 3</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;1246 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q4. Consider the following class definition:<br>class student extends String{} <br>What happens when we try to compile this class?
<br></font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;Will not complete because class body is not defined</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;Will not complete because String is abstract.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;Will not complete because String is final.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;Will complete successfully.</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 3</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;1263 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q5. A veriable declared inside the for loop control cannot be referenced outside the loop.</font></td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : T</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;1264 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q6. Java always provides a default constructor to a class.</font></td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : T</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;1273 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q7. Any class may be inherited by another class in the package.</font></td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : T</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;1287 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q8. A catch can have comma-separated multiple arguments.</font></td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : F</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;1290 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q9. A class may be both abstract and final.</font></td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : F</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;1292 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q10. The Name of a Java program file must match the name of the class with extension .java
<br></font></td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : F</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;1340 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q11. To delete a file, we can use an instance of class File.</font></td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : T</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;1347 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q12. Which of the following methods can be used to change the size of a component?
<br></font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;dimension( )</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;size()</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;setSize(  )</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;resize(  )</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 3</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;1353 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q13. The default layout manager of a JPanel is the borderlayout manager.</font></td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : F</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;1364 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q14. The checkboxGroup class is a subclass of the Component class.</font></td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : F</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;1377 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q15. To implement a model for Jtable, AbstractTableModel is extended.</font></td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : T</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;1383 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q16. When we implement the Runnable interface, we must define the method :
<br></font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;init()</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;run()</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;runnable()</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;resume()</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 2</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;1385 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q17. Declaring a method synchronized guarantees that the deadlock cannot occur.</font></td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : T</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;1390 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q18. Declaring a method synchronized guarantees that the deadlock cannot occur.</font></td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : T</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;1400 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q19. It is an error to catch the same type of exception in two different catch blocks </font></td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : T</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;9326 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q20. if("string".trim()=="string")
<br>		System.out.println("Equal");
<br>		else
<br>		System.out.println("Not Equal");			</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;the code will compile and print "Equal"</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;the code will compile and print "Not Equal"</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;the code will cause compiler error</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;none</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 1</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;9327 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q21. public class Prog1
<br>{
<br>	public static void main(String args[])
<br>	{
<br>		int k=1;
<br>		int i=++k+k++  +  +k;
<br>		System.out.println(i);
<br>	}
<br>}		</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;compilation error</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;value 3 is printed</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;value 4 is printed</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;value 7 is printed</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 4</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;9340 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q22. The event listener corresponding to handling keyboard events is the _________.</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;Event Listener</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;Key Listener</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;Mouse Listener</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;None.</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 2</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;9344 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q23. which of the following tools is used to generate the  stubs and skeletonsn for a remote service</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;javac </td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;rmic </td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;java </td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;rmiregistry</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 2</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;9355 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q24. given the following class, which of these static initializer blocks can be inserted after the comment?
<br>public class MyClass{
<br>private static int count=5;
<br>final static int STEP=10;
<br>boolean alive;
<br>//INSERT STATIC INITIALIZER BLOCK HERE
<br>}
<br>
<br>select the three correct answer.</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;static{count+=STEP;} and static{;}</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;static{count=1;}and static{STEP=count;}</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;1 and 2</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;static;</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 3</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;9362 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q25. which return options would cause assertions to be enabled for the class org.example.ttp.Bottle?</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;-ea</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;-ea:org.example</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;-ea:org...</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;both (a) and (c).</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 4</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;9367 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q26. which statement are true?
<br></font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;the class thrad is abstract.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;the class thread implements runnable</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;a program terminates when the last non-daemon thread ends</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;both 2 and 3</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 4</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;9409 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q27. Which of the following are correct statement?
<br>1.The getRequestDispatcher metod of servlet context class takes the full path of servlet,whweras the getRequestDispatcher class takes the path of the servlet relative to the ServletContext.		
<br>2.The getRequestDispatcher metod of servlet context class takes the full path of servlet,whweras the getRequestDispatcher class takes the path of the servlet relative to the ServletContext.
<br>3.The getRequestDispatcher metod of servlet context class takes the full path of servlet,whweras the getRequestDispatcher class takes the path of the servlet relative to the ServletContext.
<br>4.The getNameDispatcher(String)defined in HTTPServletRequest class takes the name of the Servlet and returns an object of RequestDispatcher class.</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;only 1</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;1&amp;3</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;1&amp;2</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;1,2,3,4</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 2</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;9415 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q28. How restrictive is the default accessibility compared to public,
<br>protected and private accessibility?	
<br>
<br>Select the one	correct answer?</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;less restrictive than public.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;More restrictive than public but less restirctive than protected.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;More restrictive than protected but less restirctive than private</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;Less restrictive than protected from within a package,and more restictive than protected from outside a package.</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 3</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;9422 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q29. Which of the following are legal methods? (Select 2)
<br>
<br>a. public null aMethod();
<br>
<br>b. public void aMethod();
<br>
<br>c. public aMethod();
<br>
<br>d. public Pet aMethod();</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;a,b</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;b,c</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;c,d</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;b,d</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 4</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;9433 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q30. What is a "stub"?</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;It assembles the arguments from the network and calls the method.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;It serialize the arguments and sends them to the server.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;It is a method.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;It is a class.</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 2</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;9443 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q31. what will happen if you compile/run this code
<br>
<br>public class  Test
<br>{
<br>	int maxElements=100;
<br>	public static void show()
<br>	{
<br>		System.out.println(maxElements);
<br>	}
<br>	public static void main(String[] args) 
<br>	{
<br>		new test().show();
<br>	}
<br>}			</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;Prints 100</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp; Prints 0</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;Compilation error at line 12.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;Compilation errors</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 4</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;9455 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q32. import java.awt.*;
<br>
<br>public class TestFrame2 extends Frame 
<br>{
<br>	public TestFrame2()
<br>	{
<br>		CheckboxGroup chg=new CheckboxGroup();
<br>		Checkbox ch=new Checkbox("Test",true,chg);
<br>		setLayout(new FlowLayout());
<br>		add(ch);
<br>		pack();
<br>		setVisible(true);
<br>	}
<br>	public static void main(String[] args) 
<br>	{
<br>		TestFrame2 tf=new TestFrame2();
<br>	}
<br>}
<br>An attempt to compile and run the above code			</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;will cause a compilation error as the checkbox group contains only one checkbox.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;will compile successfully but throws a runtime exception because the checkbox group contains only one checkbox.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;will compile and run successfully.The checkbox appears as a single radio button which is always true.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;will compile and run successfully.The checkbox bears its origional appearance and does not appear as a radio button.</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 3</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;9486 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q33. Which of the following may contain a menu bar?</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;A panel</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;A frame</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;An applet</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;A menu bar or  menu</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 2</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;9489 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q34. Read the folloowing piece of code carefully.
<br>import java.io.IOException;
<br>publuc class Question72			
<br>{
<br>public Question72() throws IOexception
<br>{
<br>throw new IOException();
<br>}
<br>}
<br>
<br>Assume that the definition of question 72E begins with thwe line.
<br>public class Question72E extends Question72 </font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;it is required that none of the constructors of question 72E should throw any checked Exception.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;it can be achieved by placing the call to the superclass with a super keyward,which is placed in a try block with a catch block to handle the IOException thrown by the super class </td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;it can be acheved by avoiding explicit calls to the base class contructor.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;It can not be doen in the Java Language with above definition of the base class.</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 2</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;9498 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q35. In order for a source code file,containing the public class Test, to successfully complie, which of the following must be true?		</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;It must have a package statement</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;It must be named Test.java</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;It must import java.lang</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;It must declare a public class named Test</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 2</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;9506 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q36. The code below draws a line. What color is the line?
<br>g.setColor(Color.red.green.yellow.red.cyan);
<br>g.drawLine(0,0,100,100);	</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;Red</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;Green</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;Black</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;LightGray</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 3</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;9553 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q37. In which of these variable declarataions will be the variable remain
<br>uninitialised unless explicitely initialised			</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;Declaration of instance variable of type int.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;Declaration of static variable of type float.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;Declaration of local variable of type float.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;Declaration of static variable of type object.</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 3</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;9555 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q38. Which of the Following is not java primitive</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;Boolean</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;Long</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;Float</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;String</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 4</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;9579 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q39. Which is the first incorrect line that will cause a compile time error in the following program?
<br>	
<br>public class MyClass
<br>{
<br>	public static void main(String args[])
<br>	{
<br>		char c;
<br>		int i;
<br>		c = `a`;   // (1)
<br>		i = c;     // (2) 
<br>		i++;       // (3)
<br>		c = i;     // (4)
<br>		c++;     // (5)
<br>	}
<br>}
<br>Select the one right answer.</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;The line labeled (1)</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;The line labeled (2)</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;The line labeled (3)</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;The line labeled (4)</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 4</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;9588 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q40. A vector class in java -------
<br>
<br>a.   is final.
<br>b.   is public.
<br>c.   is serializable
<br>d.   has a only one constructor.
<br>e.   implement java.util.List</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;only a.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;only b.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;b and c and e.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp; c and d.</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 3</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;9611 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q41. which of the following statements are true about a variable created with the static modifier?</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;Once assigned the value of a static variable may not be altered</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;A static variable created in a method will keep the same value between calls.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;Only one instance of a static variable will exist for any amount of class instances</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;The static modifier can only be applied to a primitive value</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 3</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;9616 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q42. which of the following is not operator in java?
<br>select two correct answer.</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;%</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;&lt;&lt;&lt;</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;&amp;</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;&gt;&gt;&gt;</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 2</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;9618 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q43. you are given a class hierarchy with an instance of the class Dog.
<br>The class Dog is a child of mammal and the class Mammal is a child 
<br>of the class Vertebrate. The class Vertebrate has a method called move
<br>which prints out the string "move".The class mammal overrides this method 
<br>and prints out the string "walks". The class Dog overrides this method and prints
<br>out the string "walks on paws". Given an instance of the class Dog, how can you
<br>access the ancestor method move in Vertebrate so it prints out the string "move"			</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;d.super().super().move()</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;d.parent().parent().move()</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;d.move()</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;none of the above</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 4</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;9626 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q44. what will be the result of attempting to compile and run the following class
<br>public class assignment
<br>{
<br>   public static void main(String args[])
<br>   {
<br>      int a,b,c;
<br>      b=10;
<br>      a=b=c=20;
<br>      System.out.println(a);
<br>   }
<br>
<br>}
<br>select the one answer</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;the code will fail to compile since the compiler will recognize that the variable c in the assignment statement a=b=c=20;has not been initialized </td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;the code will fail to compile because the assignment statement a=b=c=20;is illegal.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;the code will compile correctly and will display 10 when run</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;the code will compile correctly and display 20  when run</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 4</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;9638 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q45. what are reserved keywords not currently used in java</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;const</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;goto</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;both 1 and 2</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;none</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 3</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;9671 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q46. What is the default allignment for a FlowLayout?</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;FlowLayout.CENTER</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;FlowLayout.RIGHT</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;FlowLayout.LEFT</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;none of the above</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 1</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;9685 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q47. Which statements are true?</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;The conditional expression in an if statement can have method calls</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;An if statement can have either an if clause or an else clause</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;The statement if(false);else;is illegal</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;None of the above</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 1</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;9702 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q48. What will be the output
<br>
<br>Byte b1=new Byte("127");
<br>
<br>if(b1.toString()==b1.toString())
<br>  System.out.println("True");
<br>else
<br>  System.out.println("False");
<br>
<br></font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;Compilation error,toString()is not available for Byte</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;true</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;false</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;none of above</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 3</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;9711 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q49. What will be the output when run the following?
<br>public Myclass(string s){msg=s:}
<br>String msg;
<br>public void run(){
<br>    System.out.println(msg):
<br>}
<br>public static void main(string[] args)
<br>{
<br>	new MyClass("hello"):
<br>        new MyClass("world"):
<br>}
<br>}
<br></font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;The program will fail to compile</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;The program will compile without errors and will print hello and world,in the order every time the program is run</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;The program will compile without errors and will print hello and world, order every time the program is run will be unpredictable</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;The program will compile without errors and will simply terminates without any output when run.</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 4</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;9724 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q50. Allthe wrapper classes(Integer,Boolean,Float, Short,Long,Double and Characters)
<br>a.public
<br>b.are serializable
<br>c.are immutable
<br>d.extend java.lang.Number
<br>e.are final			</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;a,b</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;a,b,c</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;a,b,d,e</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;a,b,c,d,e</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 3</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;9781 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q51. The factory class java.util.Collection.</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;is public</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;implements the java.util.Collection interface.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;is private</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;none</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 1</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;9785 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q52. If the runtime exception is thrown in the finalise method</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;The running application crashes.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;The exception is simply ignored and the object is garbage collected.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;The exception is simply ignored and the object is not garbage collected.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;The exception causes jvm to crash.</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 2</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;9818 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q53. what will happen when you attempt to compile or run the code?
<br>
<br>public class Mymain
<br>{
<br>      public static void main(String args)
<br>      {
<br>             System.out.println("Hello");
<br>       }
<br>}
<br>       </font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;
<br>Cmpiler will complain that the main is reserved</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;Compilation Error</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;The code will compile but will complain at run time that main is not correctly defined</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;None</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 3</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;9827 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q54. What will happen if you compile/run this code?
<br>
<br>1: public class Q1 extends Thread
<br>2: {
<br>3:    public void run()
<br>4:    {
<br>5:       System.out.println("Before start method");
<br>6:       this.stop();
<br>7:       System.out.println("After stop method");
<br>8:    }
<br>9:
<br>10:   public static void main(String[] args)
<br>11:   {
<br>12:      Q1 a = new Q1();
<br>13:      a.start();
<br>14:   }
<br>15: }</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;Compilation error at line 7.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;Runtime exception at line 7.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;Prints "Before start method" and "After stop method".</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;Prints "Before start method" only.
<br></td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 4</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;9872 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q55. StringBuffer allocates room for _____ additional characters 
<br>without reallocation.</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;8</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;16</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;12</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;24</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 2</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;9878 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q56. Which of the following are so called "short circuit" logical operators?
<br>
<br>A) &amp; 
<br>B) || 
<br>C) &amp;&amp; 
<br>D) | 
<br>Choose the correct Option:
<br>i)   A,B
<br>ii)  B,C,D
<br>iii) B,C
<br>iv)  All</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;i</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;ii</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;iii</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;iv</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 3</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;9881 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q57. What will be the output ?
<br>class abc 
<br>{
<br>	public static void main(String[] args) 
<br>	{
<br>		StringBuffer sb1=new StringBuffer("abcd");
<br>		StringBuffer sb2=sb1;
<br>		if (sb1.equals(sb2))
<br>		{
<br>			System.out.println("OK");  
<br>		}
<br>		else
<br>			System.out.println("NOT OK");  
<br>	}
<br>}</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;Compile-Error.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;OK</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;NOT OK</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;Runtime-Error</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 2</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;9887 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q58. Which labeled line will generate error. 
<br>public class  test
<br>{
<br>	public static void main(String[] args) 
<br>	{
<br>		char c;
<br>		int i;
<br>		c=`A`;		//1
<br>		i=c;		//2
<br>		c=i+1;		//3
<br>		c++;		//4
<br>		
<br>	}
<br>}</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;The line labeled 1</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;The line labeled 2</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;The line labeled 3</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;The line labeled 4</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 3</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;9894 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q59. The Runnable interface declares which method?</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;start()</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;run()</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;stop()</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;yield()</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 2</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;9897 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q60. The following code will print
<br>
<br>1:    Double a = new Double(Double.NaN);
<br>2:    Double b = new Double(Double.NaN);
<br>3:
<br>4:    if( Double.NaN == Double.NaN )
<br>5:       System.out.println("True");
<br>6:    else
<br>7:       System.out.println("False");
<br>8:
<br>9:    if( a.equals(b) )
<br>10:      System.out.println("True");
<br>11:   else
<br>12:      System.out.println("False");</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;True
<br>   True</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;True
<br>   False</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp; False
<br>   True</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;False
<br>   False</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 3</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;9912 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q61. Which statements are true about modifiers?
<br>
<br>1.Abstract classes can contain final methods.
<br>2.Fields can be declared native.
<br>3.Non-abstract methods can be declared in abstract classes.
<br>4.Classes can be declared native.</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;1,2,3,4</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;1,3 only</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;2,3 only</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;1 only </td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 2</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;9913 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q62. which statements are true about locks?
<br>
<br>1.A thread can hold more than one lock at a time.
<br>2.Invoking wait() on a Thread object will relinquish all locks held by the thread.
<br>3.invoking wait() on an object whose lock is held by the current thread will relinquish the lock.
<br>4.Invoking notify() on a object whose lock is held by the current thread will relinquish the lock.
<br>5. Multiple threads can hold the same lock at the same time.
<br>6.The thread will be blocked until it gains the lock of the object.</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;1,3,6</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;3,6,4</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;1,3</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;1,2,5,6</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 3</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;9917 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q63. class Myclass 
<br>{
<br>	public static void main(String[] args) 
<br>	{
<br>          int b=10;
<br>	  System.out.println((b=3)+b);
<br>	} 
<br>}</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;13</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;6</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;3</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;Compilation error</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 2</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;9920 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q64. What will be  the output?
<br>class abc 
<br>{
<br>	public static void main(String[] args) 
<br>	{
<br>		String str=new String("Hello");
<br>		str.concat("Hi");
<br>		System.out.println(str);
<br>	}
<br>}
<br></font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;Hi</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;HelloHi</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;Hello</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;Compile Error-no method like concat().</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 3</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;9924 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q65. clone method is of class</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;Clonable</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;Object</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;Class</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;None of the above</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 2</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;9927 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q66. The following code will give
<br>
<br>1:     Byte b1 = new Byte("127");
<br>2:
<br>3:     if(b1.toString() == b1.toString())
<br>4:        System.out.println("True");
<br>5:     else
<br>6:        System.out.println("False");</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;Compilation error, toString() is not avialable for Byte.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;Prints "True".</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;Prints "False".</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;None of the above.</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 3</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;9931 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q67. Anonymous classes are heavily used to implement event 
<br>listeners in GUI-based application.</font></td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : T</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;9936 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q68. Does this code will compile?
<br>class base
<br>{
<br>	int x=10;
<br>}
<br>class sib1 extends base
<br>{
<br>	int y=20;
<br>}
<br>class sib2 extends base
<br>{
<br>	int z=30;
<br>}
<br>public class  test
<br>{
<br>	public static void main(String[] args) 
<br>	{
<br>		base bs= new base();
<br>		sib1 a=new sib1();
<br>		sib2 b=new sib2();
<br>		a=b;
<br>	}
<br>}</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;It will give error due to base reference compatibility</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;It will give runtime error</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;It will give compile time error due to incompatibility</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;Code will run smoothly</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 3</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;9946 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q69. Which method is not defined in the string class.</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;hashCode()</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;length()</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;concat(String)</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;reverse()</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 4</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;9964 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q70. What is the return type of method round(double) of Math Class?</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;short</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;int</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;double</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;long</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 4</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;9982 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q71. The keyword implements is used when a class inherits from an 
<br>interface.The keyword extends is used when an interface inherits 
<br>from another interface or a class inherits from another class.</font></td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : T</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;9998 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q72.  Is the following statement will create new Boolean object?
<br> Boolean b=new Boolean("XXX"); </font></td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : F</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;10018 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q73. Throwable is the superclass in the exception hierarchy.</font></td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : T</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;10026 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q74. Which statement is true?</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;Top-level classes can be declared static</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;Classes declared as members of top-level classes can be declared static</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;Local classes can be declared static</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;Anonymous classes can be declared static</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 2</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;10041 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q75. Which of the wrapper classes have a booleanValue() method?</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;	All wrapper classes.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;	All wrapper classes that also implement the compareTo() method.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;All wrapper classes extending Number.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;Only the class Boolean.</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 4</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;10047 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q76. Does the following piece of code compile ? if yes , what is output ?
<br>class Test09
<br>{
<br> static int tomb ( char a )
<br>  {
<br>    throw new NumberFormatException();
<br>  }
<br> public static void main(String args[])
<br> {
<br>  try
<br>    {
<br>        tomb(`a`);
<br>    }
<br>  catch ( Exception e )
<br>    {
<br>    System.out.println ( " Done " ) ;
<br>    }
<br>  }
<br> }
<br>
<br></font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;Compiler error ,throw new NumberFormatException() : checked Exceptions
<br>   must be declared in the throws clause or must be caught in the corresponding
<br>   catch block.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;compiler error , System.out.println( " Done " ):Statement not reached .
<br></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;NumberFormatException thrown at runtime</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp; output = Done.</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 4</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;10061 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q77. How does the setCollection deals with duplicate elements?</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;Exception is thrown if you attempt to add an element with value</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;Add method return false if you attempt to add an element with value </td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;Error at compile time</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;None</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 2</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;10068 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q78. Unicode Characters are 16 bits in size</font></td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : F</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;10089 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q79. What will happen if you compile/run this code?
<br>
<br>1:public class Q1 extends Thread
<br>2:{
<br>3:    public void run()
<br>4:    {
<br>5:       System.out.println("Before start method");
<br>6:       this.stop();
<br>7:       System.out.println("After stop method");
<br>8:   }
<br>9:  
<br>10:  public static void main(String[] args)
<br>11:   {
<br>12:      Q1 a=new Q1();
<br>13:      a.start();
<br>14:   }
<br>15: }</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;compilation error at line 7</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;Runtime exception at line 7</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;prints "Before start method" and "After stop method"</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;prints "Before start method" only</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 4</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;10093 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q80. From which of the following locations can an RMI server NOT load classes?</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;The CLASSPATH of an RMI client</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;The CLASSPATH of the RMI server</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;From an HTTP or FTP server on the network at a location specified by the client</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;From an HTTP or FTP server on the network at a location specified by the server</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 1</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;10106 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q81. Exceptions are objects of subclasses of the Throwable class.</font></td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : T</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;10131 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q82. Map can contain duplicate elements.</font></td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : F</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;10132 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q83. The subclass of NonAbstract Class can be defined as Abstract</font></td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : T</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;10135 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q84. static method in Subclass can hide a static method in superclass. </font></td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : T</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;10161 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q85. class Employee
<br>{
<br>	private String name;
<br>	private double salary;
<br>	
<br>	public Employee(String n,double s)
<br>	{
<br>		name=n;
<br>		salary=s;
<br>	}
<br>	public Employee(double s)
<br>	{
<br>		this("Gita",s);
<br>	}
<br>	public String getName()
<br>	{
<br>		return name;
<br>	}
<br>	public String getSalary()
<br>	{
<br>		return salary;
<br>	}
<br>	public static void main(String [] args)
<br>	{
<br>		Employee A=new Employee(6000);
<br>		System.out.println("Name="+A.getName()+" , salary="+A.getSalary());
<br>	}
<br>}</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;name=null , salary=6000.0</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;name=Gita , salary=6000.0</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;Runtime Exception</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;Compilation Error</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 2</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;10168 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q86. A lock is used to synchronise access to a shared resource which implements mutual exclusion(Mutex).</font></td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : T</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;10176 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q87. Interfaces can be declared abstract.</font></td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : T</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;10224 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q88. In the following code A and D will compile without error.
<br>A.StringBuffer sbl= "abcd";
<br>B.Boolean b=new Boolean("abcd");
<br>C:byte b=255;
<br>D:int x=0x1234;
<br>E:float fi=1.2;
<br></font></td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : F</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;10236 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q89. Each array object has a final field called as</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;size</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;refrence</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;length</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;None</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 3</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;10260 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q90. Before handling Model Dialog box,Model Dialog box not allow to do any other task.</font></td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : T</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;10442 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q91. Abstract clases may contain final methods.</font></td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : T</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;10454 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q92. Inserialization object is stored in form of?</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;byte</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;character</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;string</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;all</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 1</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;10468 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q93. inner classes can access only static members of outer class</font></td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : F</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;10489 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q94. Which is not an interface</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;Blob</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;SavePoint</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;Struct</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;None of the above</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 4</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;10491 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q95. When  an applet begins awt call following sequence of method.
<br></font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;init(),paint(),destroy
<br></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;init(),start(),paint(),stop(),destroy
<br></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;init(),service(),destroy</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;init(),start(),stop(),destroy
<br></td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 2</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;10510 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q96. If we call main in Static block then </font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;Program will go in infinite loop.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;Nothing will happen program will continue normaly.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;Gives compile time error.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;None of the above.</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 1</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;10995 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q97. private method can be overridden</font></td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : F</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;11018 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q98. Date class implements following interface</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;serialiazable</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;comparable</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;clonable</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;all</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 4</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;11022 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q99. what will the following code do.
<br>public static int f(int n) //2 is passed as parameter
<br>{
<br>    try
<br>       {
<br>         int r=n*n;
<br>         return r;
<br>        }
<br>        finally
<br>        {
<br>          if(n==2) 
<br>          return 0;
<br>        }
<br>}
<br>    </font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;rerurn 0</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;return 4</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;thrpw exception</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;none of the above</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 1</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;11031 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;Core Java</td>
	</tr><tr>
		<td><font color="Blue">Q100. int a = 27;
<br>{
<br> int a = 30;
<br>System.out.println(a);
<br>}
<br>
<br>output is : </font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;30</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;27</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;compile time error Variable a is already declared</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;none of the above</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 3</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr>
</tbody></table><input id="btnClose" style="FONT-WEIGHT: bold; Z-INDEX: 103; LEFT: 2px; WIDTH: 130px; POSITION: absolute; TOP: 77px; HEIGHT: 33px" onclick="window.close()" type="button" value="Close this Window" name="btnClose">
			<span id="lblResult" style="Z-INDEX: 102; LEFT: 157px; POSITION: absolute; TOP: 80px"><b><font size="5">Hi dac69, You have scored : 0</font></b></span>
<div style="LEFT: 1px; WIDTH: 780px; POSITION: absolute; TOP: 0px; HEIGHT: 80px" ms_positioning="GridLayout">
	<img id="Header11_Image1" src="./CoreJava_6_files/Main.jpg" align="Middle" border="0" height="64" width="718" style="Z-INDEX: 101; LEFT: 15px; POSITION: absolute; TOP: 3px"></div>

</form>
	

</body></html>